[{"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js":"1","/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/liveChatParser.js":"2","/home/eango/codeProjects/youtube-liveview-enhancer/src/LiveChatListener.js":"3","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js":"4","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js":"5","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DragLayer/DragLayer.js":"6","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/Chatbox/Chatbox.js":"7","/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/Constants.js":"8","/home/eango/codeProjects/youtube-liveview-enhancer/src/store.js":"9","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.js":"10","/home/eango/codeProjects/youtube-liveview-enhancer/src/index.js":"11","/home/eango/codeProjects/youtube-liveview-enhancer/src/hooks/performantDrag.js":"12","/home/eango/codeProjects/youtube-liveview-enhancer/src/App.js":"13","/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/draggableAndResizableBox.js":"14","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ResizableDraggableBox/ResizableDraggableBox.js":"15","/home/eango/codeProjects/youtube-liveview-enhancer/src/Theme.js":"16"},{"size":4438,"mtime":1607410451877,"results":"17","hashOfConfig":"18"},{"size":911,"mtime":1607239226339,"results":"19","hashOfConfig":"18"},{"size":2765,"mtime":1607141369127,"results":"20","hashOfConfig":"18"},{"size":899,"mtime":1607150496030,"results":"21","hashOfConfig":"18"},{"size":2055,"mtime":1607141369127,"results":"22","hashOfConfig":"18"},{"size":1621,"mtime":1607408656663,"results":"23","hashOfConfig":"18"},{"size":736,"mtime":1607410400436,"results":"24","hashOfConfig":"18"},{"size":292,"mtime":1606805418730,"results":"25","hashOfConfig":"18"},{"size":404,"mtime":1607402668746,"results":"26","hashOfConfig":"18"},{"size":1628,"mtime":1607141369127,"results":"27","hashOfConfig":"18"},{"size":494,"mtime":1607141369127,"results":"28","hashOfConfig":"18"},{"size":1246,"mtime":1607155283538,"results":"29","hashOfConfig":"18"},{"size":427,"mtime":1607150473294,"results":"30","hashOfConfig":"18"},{"size":2402,"mtime":1607410254822,"results":"31","hashOfConfig":"18"},{"size":2102,"mtime":1607410422609,"results":"32","hashOfConfig":"18"},{"size":607,"mtime":1607239308821,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"f6unpx",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/liveChatParser.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/LiveChatListener.js",["89","90"],"// Mutation observer that will observe for new live chats.\n// When a newly added live chat is detected a runtime message will be sent on the extension bus for the app to then catch.\n\nimport parseLivechatAndCommitToStore from './utils/liveChatParser'\n\nconst listenToLiveChat = () => {\n  const observeLiveChatMessages = liveChatIframe => {\n    const liveChatContainer = liveChatIframe.contentDocument\n\n    const livechatMessagesObserver = new MutationObserver((mutations, _) => {\n      // Loop through all mutations that occured, filter mutations by recently added nodes, and look for livestream chats and super chats.\n      for (let i = 0; i < mutations.length; ++i) {\n        for (let j = 0; j < mutations[i].addedNodes.length; ++j) {\n          const addednode = mutations[i].addedNodes[j]\n\n          if (!addednode || !addednode.classList) return\n\n          const liveChatNodeAdded = addednode.classList.contains('yt-live-chat-item-list-renderer')\n\n          const superChatAdded = addednode.classList.contains('yt-live-chat-ticker-paid-message-item-renderer')\n\n          // If newly added node is a live chat fire live chat event to browser runtime.\n          if (liveChatNodeAdded) {\n            parseLivechatAndCommitToStore(addednode)\n          }\n\n          // If newly added node is a super chat fire super chat event to browser runtime.\n          if (superChatAdded) {\n            console.log('DETECTED A SUPER CHAT')\n            console.log(addednode)\n          }\n        }\n      }\n    })\n\n    // Have the observer observe foo for changes in chiluren\n    livechatMessagesObserver.observe(liveChatContainer, {\n      childList: true,\n      subtree: true\n    })\n  }\n\n  // Set up the mutation observer to await for the youtube livechat to appear on the screen.\n  const chatAppInitializedObserver = new MutationObserver((_, mutationObserverInstance) => {\n    const iframe = Array.from(document.getElementsByTagName('iframe')).find(i =>\n      i.classList.contains('ytd-live-chat-frame')\n    )\n    if (!iframe || !iframe.contentDocument) return\n\n    // If not live chat tags are found, ie no-one has commented in the live chat, then there is nothing to observe and parse so keep waiting.\n    const isLiveChatStarted = iframe.contentDocument.getElementsByTagName('yt-live-chat-text-message-renderer').length\n    if (!isLiveChatStarted) return\n\n    // Live chat is started, start observing the live chat iframe for changes.\n    observeLiveChatMessages(iframe)\n\n    // We found the live-chat can stop observing for its initialization now.\n    mutationObserverInstance.disconnect()\n  })\n\n  // Observe for live chat window to be initialized\n  chatAppInitializedObserver.observe(document, {\n    childList: true,\n    subtree: true\n  })\n}\n\nexport default listenToLiveChat\n",["91","92","93","94","95","96"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js",["97","98"],"import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { useDrop } from 'react-dnd'\nimport {\n  BOTTOM_RIGHT_DROP_SOURCE,\n  TOP_RIGHT_DROP_SOURCE,\n  TOP_LEFT_DROP_SOURCE,\n  LEFT_SIDE_DROP_SOURCE\n} from '../../utils/Constants'\n\n/* eslint-disable indent */\nconst OverlayContainer = styled.div`\n  height: ${({ isSidePanel }) => (isSidePanel ? '100%' : '200px')};\n  width: 200px;\n  position: absolute;\n  ${({ position }) =>\n    position === TOP_RIGHT_DROP_SOURCE || position === BOTTOM_RIGHT_DROP_SOURCE\n      ? css`\n          right: 0;\n          ${position === TOP_RIGHT_DROP_SOURCE\n            ? css`\n                top: 0;\n              `\n            : css`\n                bottom: 0;\n              `};\n        `\n      : css`\n          left: 0;\n          ${position === TOP_LEFT_DROP_SOURCE || position === LEFT_SIDE_DROP_SOURCE\n            ? css`\n                top: 0;\n              `\n            : css`\n                bottom: 0;\n              `};\n        `}\n\n  background-color: rgba(\n    ${props => props.theme.fullscreen.overlayColor},\n    ${props => props.theme.fullscreen.opacity}\n  );\n`\n/* eslint-enable indent */\n\nconst DropOverlay = ({ position, isSidePanel, children }) => {\n  const [hasDropped, setHasDropped] = useState(false)\n\n  const [{ isOver, isOverCurrent }, drop] = useDrop({\n    accept: 'chat-list',\n    drop(item, monitor) {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        return\n      }\n      setHasDropped(true)\n    },\n    collect: monitor => {\n      return {\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true })\n      }\n    }\n  })\n\n  return (\n    <OverlayContainer position={position} isSidePanel={isSidePanel} isOverCurrent={isOverCurrent}>\n      {hasDropped && 'lol'}\n\n      {children}\n    </OverlayContainer>\n  )\n}\n\nDropOverlay.propTypes = {\n  children: PropTypes.node.isRequired,\n  position: PropTypes.string.isRequired,\n  isSidePanel: PropTypes.bool.isRequired\n}\n\nexport default DropOverlay\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DragLayer/DragLayer.js",["99"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useDragLayer } from 'react-dnd'\nimport Chatbox from '../Chatbox/Chatbox'\nimport usePerformantDrag from '../../hooks/performantDrag'\n\nconst Container = styled.div`\n  position: fixed;\n  pointer-events: none;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`\n\n// Manually use native javascript instead of styled components to set the transform.\nconst getItemStyles = dragOffsetDiff => {\n  if (!dragOffsetDiff) {\n    return {\n      display: 'none'\n    }\n  }\n\n  const { x, y } = dragOffsetDiff\n\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform\n  }\n}\n\nconst DragLayer = () => {\n  const { itemType, isDragging, item } = useDragLayer(monitor => ({\n    // item will be needed to get any props with item.prop for the component.\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    isDragging: monitor.isDragging()\n  }))\n\n  const boxes = useSelector(state => state.draggableAndResizableBox)\n  const dragOffsetDiff = usePerformantDrag(isDragging)\n\n  function renderItem() {\n    switch (itemType) {\n      case 'chat-box':\n        const { width, height, left, top } = boxes[item.id]\n        return <Chatbox isDragging={true} width={width} height={height} left={left} top={top} />\n      default:\n        return null\n    }\n  }\n  if (!isDragging) {\n    return null\n  }\n\n  return (\n    <Container>\n      <div style={getItemStyles(dragOffsetDiff)}>{renderItem()}</div>\n    </Container>\n  )\n}\n\nexport default DragLayer\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/Chatbox/Chatbox.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/Constants.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/store.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/index.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/hooks/performantDrag.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/App.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/draggableAndResizableBox.js",["100","101"],"/*\nReducer to contain the state of the multiple draggable/resizable box widgets the\nuser can add and customize!\n*/\nconst actionTypes = {\n  ADD_BOX: 'ADD_BOX',\n  MOVE_BOX: 'MOVE_BOX',\n  RESIZE_BOX: 'RESIZE_BOX',\n  SET_IS_DRAGGING: 'SET_IS_DRAGGING',\n  SET_IS_RESIZING: 'SET_IS_RESIZING'\n}\n\n// This isn't an array since each object will need a unique id (so we can keep track what is being dragged and what's not)\n// TODO: when implement ADD_BOX think how we will generate ids (will probably jsut limit how many can be created honestly)\nconst initialState = {\n  a: { top: 500, left: 500, height: 200, width: 200, isResizing: false, isDragging: false }\n}\n\nconst draggableAndResizableBoxReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVE_BOX:\n      return {\n        ...state,\n        [action.payload.id]: { ...state[[action.payload.id]], left: action.payload.left, top: action.payload.top }\n      }\n    case actionTypes.RESIZE_BOX:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[[action.payload.id]],\n          width: action.payload.width,\n          height: action.payload.height,\n          left: action.payload.left,\n          top: action.payload.top,\n          isResizing: true\n        }\n      }\n\n    case actionTypes.SET_IS_DRAGGING:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[[action.payload.id]],\n          isDragging: action.payload.isDragging\n        }\n      }\n    case actionTypes.SET_IS_RESIZING:\n      console.log(state, action.payload.id)\n      const ret = {\n        ...state,\n        [action.payload.id]: {\n          ...state[[action.payload.id]],\n          isResizing: action.payload.isResizing\n        }\n      }\n      console.log(ret)\n      return ret\n\n    default:\n      return state\n  }\n}\n\nexport const moveBox = (id, left, top) => {\n  return { type: actionTypes.MOVE_BOX, payload: { id, left, top } }\n}\n\nexport const setSizeBox = (id, width, height, left, top) => {\n  return { type: actionTypes.RESIZE_BOX, payload: { id, left, top, width, height } }\n}\n\nexport const setIsDraggingBox = (id, isDragging) => {\n  return { type: actionTypes.SET_IS_DRAGGING, payload: { id, isDragging } }\n}\n\nexport const setIsResizingBox = (id, isResizing) => {\n  return { type: actionTypes.SET_IS_RESIZING, payload: { id, isResizing } }\n}\n\nexport default draggableAndResizableBoxReducer\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ResizableDraggableBox/ResizableDraggableBox.js",["102"],"import React, { useEffect, useState } from 'react'\nimport { useDrag } from 'react-dnd'\nimport { Resizable, ResizableBox } from 'react-resizable'\nimport styled from 'styled-components'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n  transform: ${props => props.transform};\n  position: absolute;\n\n  // For now lets just always hide element while dragging since will force you to code a preview drag\n  opacity: ${props => (props.isDragging ? 0 : 1)};\n  height: ${props => (props.isDragging ? 0 : '')};\n\n  // Parent nodes for the app will toggle this so make sure to manually set this on anything draggable to auto.\n  pointer-events: auto;\n`\n\n// eslint-disable-next-line react/prop-types\nconst ResizableDraggableBox = ({ id, left, top, children, width, height, onResize, onResizeStart, onResizeStop }) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { id, left, top, type: 'chat-box' },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  // Will locally keep track if resizing is in progress, if so we will set the drag ref\n  const [isResizing, setIsResizing] = useState(false)\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true })\n  }, [])\n\n  // Get current position of dragging box element.\n  const transform = `translate3d(${left}px, ${top}px, 0)`\n\n  return (\n    <Resizable\n      width={width}\n      height={height}\n      onResize={(e, data) => onResize(e, data)}\n      resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n      onResizeStart={() => setIsResizing(true) || onResizeStart()}\n      onResizeStop={() => setIsResizing(false) || onResizeStop()}\n    >\n      <Container ref={isResizing ? null : drag} transform={transform} isDragging={isDragging}>\n        {children}\n      </Container>\n    </Resizable>\n  )\n}\n\nResizableDraggableBox.propTypes = {\n  id: PropTypes.string.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport default ResizableDraggableBox\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/Theme.js",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"108","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"109","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":22},{"ruleId":"103","severity":1,"message":"110","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":4,"column":21,"nodeType":"105","messageId":"106","endLine":4,"endColumn":33},{"ruleId":"103","severity":1,"message":"112","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":19},{"ruleId":"103","severity":1,"message":"114","line":13,"column":31,"nodeType":"105","messageId":"106","endLine":13,"endColumn":47},{"ruleId":"103","severity":1,"message":"115","line":17,"column":3,"nodeType":"105","messageId":"106","endLine":17,"endColumn":24},{"ruleId":"103","severity":1,"message":"116","line":18,"column":3,"nodeType":"105","messageId":"106","endLine":18,"endColumn":23},{"ruleId":"103","severity":1,"message":"117","line":19,"column":3,"nodeType":"105","messageId":"106","endLine":19,"endColumn":26},{"ruleId":"103","severity":1,"message":"118","line":20,"column":3,"nodeType":"105","messageId":"106","endLine":20,"endColumn":27},{"ruleId":"103","severity":1,"message":"119","line":21,"column":3,"nodeType":"105","messageId":"106","endLine":21,"endColumn":24},{"ruleId":"103","severity":1,"message":"120","line":37,"column":7,"nodeType":"105","messageId":"106","endLine":37,"endColumn":25},{"ruleId":"103","severity":1,"message":"121","line":51,"column":12,"nodeType":"105","messageId":"106","endLine":51,"endColumn":18},{"ruleId":"103","severity":1,"message":"122","line":72,"column":57,"nodeType":"105","messageId":"106","endLine":72,"endColumn":67},{"ruleId":"123","severity":1,"message":"124","line":29,"column":13,"nodeType":"125","messageId":"126","endLine":29,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":30,"column":13,"nodeType":"125","messageId":"126","endLine":30,"endColumn":24},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"103","severity":1,"message":"121","line":50,"column":12,"nodeType":"105","messageId":"106","endLine":50,"endColumn":18},{"ruleId":"103","severity":1,"message":"139","line":50,"column":37,"nodeType":"105","messageId":"106","endLine":50,"endColumn":41},{"ruleId":"103","severity":1,"message":"140","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":48,"column":7,"nodeType":"125","messageId":"126","endLine":48,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":56,"column":7,"nodeType":"125","messageId":"126","endLine":56,"endColumn":18},{"ruleId":"103","severity":1,"message":"111","line":3,"column":21,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'DndProvider' is defined but never used.","'HTML5Backend' is defined but never used.","'Resizable' is defined but never used.","'ResizableBox' is defined but never used.","'ChatList' is defined but never used.","'DropOverlay' is defined but never used.","'setIsDraggingBox' is defined but never used.","'TOP_RIGHT_DROP_SOURCE' is defined but never used.","'TOP_LEFT_DROP_SOURCE' is defined but never used.","'BOTTOM_LEFT_DROP_SOURCE' is defined but never used.","'BOTTOM_RIGHT_DROP_SOURCE' is defined but never used.","'LEFT_SIDE_DROP_SOURCE' is defined but never used.","'ResizableContainer' is assigned a value but never used.","'isOver' is assigned a value but never used.","'isDragging' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["141"],"no-spaced-func",["142"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'drop' is assigned a value but never used.","'useDispatch' is defined but never used.","padding-line-between-statements","func-call-spacing"]