[{"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DraggableBox/DraggableBox.js":"1","/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/livechat.js":"2","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js":"3","/home/eango/codeProjects/youtube-liveview-enhancer/src/hooks/performantDrag.js":"4","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DragLayer/DragLayer.js":"5","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js":"6","/home/eango/codeProjects/youtube-liveview-enhancer/src/store.js":"7","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js":"8","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.stories.js":"9","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/Chatbox/Chatbox.js":"10","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.stories.js":"11","/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/draggableAndResizableBox.js":"12"},{"size":1411,"mtime":1607235269111,"results":"13","hashOfConfig":"14"},{"size":471,"mtime":1607141369127,"results":"15","hashOfConfig":"14"},{"size":2055,"mtime":1607141369127,"results":"16","hashOfConfig":"14"},{"size":1246,"mtime":1607155283538,"results":"17","hashOfConfig":"14"},{"size":1385,"mtime":1607222216805,"results":"18","hashOfConfig":"14"},{"size":5115,"mtime":1607236790408,"results":"19","hashOfConfig":"14"},{"size":404,"mtime":1607237353947,"results":"20","hashOfConfig":"21"},{"size":899,"mtime":1607150496030,"results":"22","hashOfConfig":"14"},{"size":575,"mtime":1607141369127,"results":"23","hashOfConfig":"14"},{"size":772,"mtime":1607231004432,"results":"24","hashOfConfig":"14"},{"size":35429,"mtime":1607237389376,"results":"25","hashOfConfig":"21"},{"size":1439,"mtime":1607237222590,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mk8zd6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k5h87f",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DraggableBox/DraggableBox.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/livechat.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js",["53","54"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/hooks/performantDrag.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DragLayer/DragLayer.js",["55"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js",["56","57","58","59","60","61","62","63","64","65","66","67","68"],"import React, { useState, useCallback } from 'react'\nimport { DndProvider, useDrop } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { Resizable, ResizableBox } from 'react-resizable'\nimport 'react-resizable/css/styles.css'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport DragLayer from '../DragLayer/DragLayer'\nimport ChatList from '../ChatList/ChatList'\nimport DraggableBox from '../DraggableBox/DraggableBox'\nimport DropOverlay from '../DropOverlay/DropOverlay'\nimport Chatbox from '../Chatbox/Chatbox'\n// ES6\n\nimport {\n  TOP_RIGHT_DROP_SOURCE,\n  TOP_LEFT_DROP_SOURCE,\n  BOTTOM_LEFT_DROP_SOURCE,\n  BOTTOM_RIGHT_DROP_SOURCE,\n  LEFT_SIDE_DROP_SOURCE\n} from '../../utils/Constants'\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  /* If this drop source component is in a state where a user \"can drop\" something onto it, \n  make sure pointer events enabled Otherwise, disable pointer events so user can interact \n  with youtube player with no problems */\n  pointer-events: ${props => (props.canDrop ? 'auto' : 'none')};\n`\n\nconst ResizableContainer = styled.div`\n  position: absolute;\n\n  transform: translate3d(${props => props.left}px, ${props => props.top}px, 0);\n\n  // Parent nodes for the app will toggle this so make sure to manually set this on anything draggable to auto.\n  pointer-events: auto;\n`\n\n// NEED TO USE DROP TARGET NESTING HERE ....\nconst FullscreenLiveViewChat = () => {\n  const [boxes, setBoxes] = useState({\n    a: { top: 500, left: 500, height: 200, width: 200, isResizing: true }\n    // b: { top: 180, left: 20, height: 200, width: 200, isResizing: false }\n  })\n\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: 'chat-box',\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset()\n      const left = Math.round(item.left + delta.x)\n      const top = Math.round(item.top + delta.y)\n      moveBox(item.id, left, top)\n      return undefined\n    },\n\n    // TODO: look into how efficient this is when have the time\n    // (unsure if just making a custom useMemo hook would be better, I assume react dnd library implemented this to be efficient though)\n    collect: monitor => ({\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  const moveBox = (id, left, top) => {\n    setBoxes({\n      ...boxes,\n      [id]: { ...boxes[[id]], left, top }\n    })\n  }\n\n  const setSizeBox = (id, width, height, left, top) => {\n    setBoxes({\n      ...boxes,\n      [id]: { ...boxes[[id]], width, height, left, top, isResizing: true }\n    })\n  }\n\n  return (\n    <>\n      <Container ref={drop} canDrop={canDrop}>\n        {Object.keys(boxes).map(key => {\n          const { left, top, isResizing, width, height } = boxes[key]\n\n          return (\n            <div>\n              {isResizing ? (\n                <Resizable\n                  width={width}\n                  height={height}\n                  onResize={(e, data) => {\n                    let newLeft = left\n                    let newTop = top\n                    const deltaHeight = data.size.height - height\n                    const deltaWidth = data.size.width - width\n\n                    // For better user experience allows resizing from any angle to \"feel\" right.\n                    // Note: If performance is an issue ever removing this feature should improve.\n                    if (data.handle[0] === 'n') {\n                      newTop -= deltaHeight\n                    }\n                    if (data.handle[data.handle.length - 1] === 'w') {\n                      newLeft -= deltaWidth\n                    }\n\n                    setSizeBox(key, data.size.width, data.size.height, newLeft, newTop)\n                  }}\n                  resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n                >\n                  <ResizableContainer left={left} top={top}>\n                    <Chatbox\n                      isResizing={isResizing}\n                      isDragging={false}\n                      width={width}\n                      height={height}\n                      left={left}\n                      top={top}\n                    />\n                  </ResizableContainer>\n                </Resizable>\n              ) : (\n                <DraggableBox key={key} id={key} left={left} top={top}>\n                  <Chatbox className=\"lolol\" isDragging={false} width={width} height={height} />\n                </DraggableBox>\n              )}\n            </div>\n          )\n        })}\n      </Container>\n      <DragLayer />\n    </>\n  )\n}\n\nexport default FullscreenLiveViewChat\n\n// TODO: Mess with adding more drop targets later (need to set these as \"greedy\" drop targets i think will figure it out later)\n/*\n        <DropOverlay position={TOP_RIGHT_DROP_SOURCE} />\n\n        <DropOverlay position={LEFT_SIDE_DROP_SOURCE} isSidePanel={true}>\n          <DropOverlay position={TOP_LEFT_DROP_SOURCE} />\n          <DropOverlay position={BOTTOM_LEFT_DROP_SOURCE} />\n        </DropOverlay>\n\n        <DropOverlay position={BOTTOM_RIGHT_DROP_SOURCE} />\n        */\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/store.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.stories.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/Chatbox/Chatbox.js",["69","70","71"],"import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport ChatList from '../ChatList/ChatList'\n\nconst Box = styled.div`\n  background-color: blue;\n  padding: 20px;\n\n  height: ${props => props.height}px;\n  width: ${props => props.width}px;\n\n  margin: ${props => props.top} 0 0 ${props => props.left};\n`\n\n// eslint-disable-next-line react/prop-types\nconst Chatbox = ({ isDragging, width, height, isResizing, left, top }) => {\n  return (\n    <Box height={height} width={width} left={left} top={top}>\n      <div> lolol</div>\n      {/*   {!isDragging && !isResizing ? <ChatList /> : <div>You are Dragging</div>}\n\n      */}\n    </Box>\n  )\n}\n\nChatbox.propTypes = {\n  isDragging: PropTypes.bool.isRequired\n}\n\nexport default Chatbox\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.stories.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/reducers/draggableAndResizableBox.js",[],{"ruleId":"72","severity":1,"message":"73","line":50,"column":12,"nodeType":"74","messageId":"75","endLine":50,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":50,"column":37,"nodeType":"74","messageId":"75","endLine":50,"endColumn":41},{"ruleId":"72","severity":1,"message":"77","line":35,"column":33,"nodeType":"74","messageId":"75","endLine":35,"endColumn":37},{"ruleId":"72","severity":1,"message":"78","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":38},{"ruleId":"72","severity":1,"message":"79","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":21},{"ruleId":"72","severity":1,"message":"80","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":22},{"ruleId":"72","severity":1,"message":"81","line":4,"column":21,"nodeType":"74","messageId":"75","endLine":4,"endColumn":33},{"ruleId":"72","severity":1,"message":"82","line":7,"column":10,"nodeType":"74","messageId":"75","endLine":7,"endColumn":21},{"ruleId":"72","severity":1,"message":"83","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"84","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":19},{"ruleId":"72","severity":1,"message":"85","line":16,"column":3,"nodeType":"74","messageId":"75","endLine":16,"endColumn":24},{"ruleId":"72","severity":1,"message":"86","line":17,"column":3,"nodeType":"74","messageId":"75","endLine":17,"endColumn":23},{"ruleId":"72","severity":1,"message":"87","line":18,"column":3,"nodeType":"74","messageId":"75","endLine":18,"endColumn":26},{"ruleId":"72","severity":1,"message":"88","line":19,"column":3,"nodeType":"74","messageId":"75","endLine":19,"endColumn":27},{"ruleId":"72","severity":1,"message":"89","line":20,"column":3,"nodeType":"74","messageId":"75","endLine":20,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":52,"column":12,"nodeType":"74","messageId":"75","endLine":52,"endColumn":18},{"ruleId":"72","severity":1,"message":"83","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"90","line":17,"column":20,"nodeType":"74","messageId":"75","endLine":17,"endColumn":30},{"ruleId":"72","severity":1,"message":"91","line":17,"column":47,"nodeType":"74","messageId":"75","endLine":17,"endColumn":57},"no-unused-vars","'isOver' is assigned a value but never used.","Identifier","unusedVar","'drop' is assigned a value but never used.","'item' is assigned a value but never used.","'useCallback' is defined but never used.","'DndProvider' is defined but never used.","'HTML5Backend' is defined but never used.","'ResizableBox' is defined but never used.","'useDispatch' is defined but never used.","'ChatList' is defined but never used.","'DropOverlay' is defined but never used.","'TOP_RIGHT_DROP_SOURCE' is defined but never used.","'TOP_LEFT_DROP_SOURCE' is defined but never used.","'BOTTOM_LEFT_DROP_SOURCE' is defined but never used.","'BOTTOM_RIGHT_DROP_SOURCE' is defined but never used.","'LEFT_SIDE_DROP_SOURCE' is defined but never used.","'isDragging' is defined but never used. Allowed unused args must match /^_/u.","'isResizing' is defined but never used. Allowed unused args must match /^_/u."]