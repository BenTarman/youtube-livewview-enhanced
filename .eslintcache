[{"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js":"1","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.stories.js":"2","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.js":"3","/home/eango/codeProjects/youtube-liveview-enhancer/src/App.js":"4","/home/eango/codeProjects/youtube-liveview-enhancer/src/LiveChatListener.js":"5","/home/eango/codeProjects/youtube-liveview-enhancer/src/index.js":"6","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js":"7","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/LiveviewChat/LiveviewChat.stories.js":"8","/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js":"9","/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/Constants.js":"10"},{"size":950,"mtime":1606805788351,"results":"11","hashOfConfig":"12"},{"size":814,"mtime":1606799000199,"results":"13","hashOfConfig":"14"},{"size":118,"mtime":1606628744442,"results":"15","hashOfConfig":"12"},{"size":782,"mtime":1606781390904,"results":"16","hashOfConfig":"14"},{"size":2669,"mtime":1606616417450,"results":"17","hashOfConfig":"14"},{"size":402,"mtime":1606616692323,"results":"18","hashOfConfig":"14"},{"size":340,"mtime":1606628850405,"results":"19","hashOfConfig":"14"},{"size":0,"mtime":1606627826213,"results":"20","hashOfConfig":"14"},{"size":1655,"mtime":1606805967914,"results":"21","hashOfConfig":"12"},{"size":292,"mtime":1606805418730,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4sflys",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yussv2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/FullscreenLiveviewChat/FullscreenLiveviewChat.stories.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatMessage/ChatMessage.js",["44"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/App.js",["45"],"/home/eango/codeProjects/youtube-liveview-enhancer/src/LiveChatListener.js",["46","47","48","49"],"// Mutation observer that will observe for new live chats.\n// When a newly added live chat is detected a runtime message will be sent on the extension bus for the app to then catch.\n\nconst listenToLiveChat = () => {\n  const observeLiveChatMessages = liveChatIframe => {\n    const liveChatContainer = liveChatIframe.contentDocument\n\n    const livechatMessagesObserver = new MutationObserver((mutations, _) => {\n      // Loop through all mutations that occured, filter mutations by recently added nodes, and look for livestream chats and super chats.\n      for (let i = 0; i < mutations.length; ++i) {\n        for (let j = 0; j < mutations[i].addedNodes.length; ++j) {\n          const addednode = mutations[i].addedNodes[j]\n\n          const liveChatNodeAdded = addednode.classList.contains('yt-live-chat-item-list-renderer')\n\n          const superChatAdded = addednode.classList.contains('yt-live-chat-ticker-paid-message-item-renderer')\n\n          // If newly added node is a live chat fire live chat event to browser runtime.\n          if (liveChatNodeAdded) {\n            console.log('DETECTED A LIVE CHAT')\n            console.log(addednode)\n          }\n\n          // If newly added node is a super chat fire super chat event to browser runtime.\n          if (superChatAdded) {\n            console.log('DETECTED A SUPER CHAT')\n            console.log(addednode)\n          }\n        }\n      }\n    })\n\n    // Have the observer observe foo for changes in chiluren\n    livechatMessagesObserver.observe(liveChatContainer, {\n      childList: true,\n      subtree: true\n    })\n  }\n\n  // Set up the mutation observer to await for the youtube livechat to appear on the screen.\n  const chatAppInitializedObserver = new MutationObserver((_, mutationObserverInstance) => {\n    const iframe = Array.from(document.getElementsByTagName('iframe')).find(i =>\n      i.classList.contains('ytd-live-chat-frame')\n    )\n    if (!iframe || !iframe.contentDocument) return\n\n    // If not live chat tags are found, ie no-one has commented in the live chat, then there is nothing to observe and parse so keep waiting.\n    const isLiveChatStarted = iframe.contentDocument.getElementsByTagName('yt-live-chat-text-message-renderer').length\n    if (!isLiveChatStarted) return\n\n    // Live chat is started, start observing the live chat iframe for changes.\n    observeLiveChatMessages(iframe)\n\n    // We found the live-chat can stop observing for its initialization now.\n    mutationObserverInstance.disconnect()\n  })\n\n  // Observe for live chat window to be initialized\n  chatAppInitializedObserver.observe(document, {\n    childList: true,\n    subtree: true\n  })\n}\n\nexport default listenToLiveChat\n","/home/eango/codeProjects/youtube-liveview-enhancer/src/index.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/ChatList/ChatList.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/LiveviewChat/LiveviewChat.stories.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/components/DropOverlay/DropOverlay.js",[],"/home/eango/codeProjects/youtube-liveview-enhancer/src/utils/Constants.js",[],{"ruleId":"50","severity":1,"message":"51","line":3,"column":21,"nodeType":"52","messageId":"53","endLine":3,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":7,"column":21,"nodeType":"56","messageId":"57","endLine":7,"endColumn":22,"fix":"58"},{"ruleId":"59","severity":1,"message":"60","line":20,"column":13,"nodeType":"61","messageId":"57","endLine":20,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":21,"column":13,"nodeType":"61","messageId":"57","endLine":21,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":26,"column":13,"nodeType":"61","messageId":"57","endLine":26,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":27,"column":13,"nodeType":"61","messageId":"57","endLine":27,"endColumn":24},"no-unused-vars","'message' is defined but never used. Allowed unused args must match /^_/u.","Identifier","unusedVar","comma-dangle","Unexpected trailing comma.","Property","unexpected",{"range":"62","text":"63"},"no-console","Unexpected console statement.","MemberExpression",[161,162],""]